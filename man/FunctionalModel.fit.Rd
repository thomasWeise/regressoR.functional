% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fit.R
\name{FunctionalModel.fit}
\alias{FunctionalModel.fit}
\title{Fit the Given Model Blueprint to the Specified Data}
\usage{
FunctionalModel.fit(metric, model, par = NULL,
  fitters = FunctionalModel.fit.defaultFitters(length(metric@x),
  model@paramCount))
}
\arguments{
\item{metric}{an instance of \code{RegressionQualityMetric}}

\item{model}{an instance of \code{\link{FunctionalModel}}}

\item{par}{the initial starting point}

\item{fitters}{the fitters}
}
\value{
On success, an instance of
  \code{\link{FittedFunctionalModel}}. \code{NULL} on failure.
}
\description{
Apply a set of fitters iteratively to fit the specified model to
the given data. First, we generate a starting guess about the
parameterization via \code{\link{FunctionalModel.par.estimate}} (or accept it
via the parameter \code{par}). From then on, we apply the different
function fitters one by one. All the fitters who have not produced the
current best solution are applied again, to the now-best guess. However, we
do not apply the fitters that have produced that very guess in the next
round. (They may get a chance again in a later turn.) Anyway, this
procedure is iterated until no improvement can be made anymore. After
finishing the fitting, we attempt whether rounding the fitted parameters to
integers can improve the fitting quality.
}
\examples{

set.seed(12555)
x <- (1:201 - 100) * 0.1;
fxpar <- function(x, par) par[1] + x * (par[2] + x * (par[3]));
par <- c(4, -3, 2);
fx <- function(x) fxpar(x, par);
y <- fx(x);
model <- regressoR.functional.models::FunctionalModel.quadratic();
metric1 <- regressoR.quality::RegressionQualityMetric.default(x, y);
res1 <- FunctionalModel.fit(metric1, model);
res1@quality
# [1] 0
res1@par
# [1]  4 -3  2

xr <- x + 0.1*rnorm(length(x));
yr <- y + 0.1*rnorm(length(y));
metric2 <- regressoR.quality::RegressionQualityMetric.default(xr, yr);
res2 <- FunctionalModel.fit(metric2, model);
res2@quality
# [1] 0.2439082
res2@par
# [1]  3.919365 -2.938202  1.998102
}
